{"version":3,"file":"static/css/main.cd7daf87.css","mappings":"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","sources":["styles/index.scss","../node_modules/@csstools/normalize.css/normalize.css","styles/helpers/_reset.scss","../node_modules/include-media/dist/_include-media.scss","styles/helpers/_variables.scss","styles/components/_buttons.scss","styles/components/_offset.scss","styles/components/_preloader.scss","styles/components/_tooltip.scss","styles/layout/_header.scss","styles/layout/_intro.scss","styles/layout/_employees.scss","styles/layout/_form.scss"],"sourcesContent":["@import '~include-media/dist/include-media';\n\n/*!* helpers parts *!*/\n@import './helpers/variables';\n@import './helpers/reset';\n\n/*!* components *!*/\n@import './components/fonts';\n@import './components/buttons';\n@import './components/offset';\n@import './components/preloader';\n@import './components/tooltip';\n\n/*!* layout parts *!*/\n@import './layout/header';\n@import './layout/intro';\n@import './layout/employees';\n@import './layout/form';\n","/* Document\n * ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n */\n\n:where(html) {\n  line-height: 1.15; /* 1 */\n}\n\n/* Sections\n * ========================================================================== */\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Edge, Firefox, and Safari.\n */\n\n:where(h1) {\n  font-size: 2em;\n  margin-block-end: 0.67em;\n  margin-block-start: 0.67em;\n}\n\n/* Grouping content\n * ========================================================================== */\n\n/**\n * Remove the margin on nested lists in Chrome, Edge, and Safari.\n */\n\n:where(dl, ol, ul) :where(dl, ol, ul) {\n  margin-block-end: 0;\n  margin-block-start: 0;\n}\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Correct the inheritance of border color in Firefox.\n */\n\n:where(hr) {\n  box-sizing: content-box; /* 1 */\n  color: inherit; /* 2 */\n  height: 0; /* 1 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\n:where(pre) {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n * ========================================================================== */\n\n/**\n * Add the correct text decoration in Safari.\n */\n\n:where(abbr[title]) {\n  text-decoration: underline;\n  text-decoration: underline dotted;\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\n:where(b, strong) {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\n:where(code, kbd, samp) {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\n:where(small) {\n  font-size: 80%;\n}\n\n/* Tabular data\n * ========================================================================== */\n\n/**\n * 1. Correct table border color in Chrome, Edge, and Safari.\n * 2. Remove text indentation from table contents in Chrome, Edge, and Safari.\n */\n\n:where(table) {\n  border-color: currentColor; /* 1 */\n  text-indent: 0; /* 2 */\n}\n\n/* Forms\n * ========================================================================== */\n\n/**\n * Remove the margin on controls in Safari.\n */\n\n:where(button, input, select) {\n  margin: 0;\n}\n\n/**\n * Remove the inheritance of text transform in Firefox.\n */\n\n:where(button) {\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style buttons in iOS and Safari.\n */\n\n:where(button, input:is([type=\"button\" i], [type=\"reset\" i], [type=\"submit\" i])) {\n  -webkit-appearance: button;\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Edge, and Firefox.\n */\n\n:where(progress) {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the inheritance of text transform in Firefox.\n */\n\n:where(select) {\n  text-transform: none;\n}\n\n/**\n * Remove the margin in Firefox and Safari.\n */\n\n:where(textarea) {\n  margin: 0;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome, Edge, and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n:where(input[type=\"search\" i]) {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Safari.\n */\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * Correct the text style of placeholders in Chrome, Edge, and Safari.\n */\n\n::-webkit-input-placeholder {\n  color: inherit;\n  opacity: 0.54;\n}\n\n/**\n * Remove the inner padding in Chrome, Edge, and Safari on macOS.\n */\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style upload buttons in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/**\n * Remove the inner border and padding of focus outlines in Firefox.\n */\n\n:where(button, input:is([type=\"button\" i], [type=\"color\" i], [type=\"reset\" i], [type=\"submit\" i]))::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus outline styles unset by the previous rule in Firefox.\n */\n\n:where(button, input:is([type=\"button\" i], [type=\"color\" i], [type=\"reset\" i], [type=\"submit\" i]))::-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Remove the additional :invalid styles in Firefox.\n */\n\n:where(:-moz-ui-invalid) {\n  box-shadow: none;\n}\n\n/* Interactive\n * ========================================================================== */\n\n/*\n * Add the correct styles in Safari.\n */\n\n:where(dialog) {\n  background-color: white;\n  border: solid;\n  color: black;\n  height: -moz-fit-content;\n  height: fit-content;\n  left: 0;\n  margin: auto;\n  padding: 1em;\n  position: absolute;\n  right: 0;\n  width: -moz-fit-content;\n  width: fit-content;\n}\n\n:where(dialog:not([open])) {\n  display: none;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\n:where(summary) {\n  display: list-item;\n}\n","@import-normalize;\n\n/* set border-box for all */\n*,\n*:before,\n*:after {\n  box-sizing: border-box;\n  -webkit-text-size-adjust: none;\n}\n\n/* reset ul, ol padding */\nul,\nol {\n  padding: 0;\n  margin: 0;\n}\n\n// input focus\ninput:focus {\n  outline: none;\n}\n\n// hide input\ninput[type='radio'],\ninput[type='file'] {\n  appearance: none;\n  opacity: 0;\n  width: 0;\n  height: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n}\n/* reset list-style */\nli {\n  list-style: none;\n}\n/* reset text-decoration */\na[href] {\n  text-decoration: none;\n}\na[href]:hover {\n  text-decoration: none;\n}\n\n/* reset heading margin */\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np {\n  margin: 0;\n}\n\n/* br fix */\n@include media('>xs') {\n  .mb {\n    display: none !important;\n  }\n  .pc {\n    display: block !important;\n  }\n}\n@include media('<=xs') {\n  .mb {\n    display: block !important;\n  }\n  .pc {\n    display: none !important;\n  }\n}\n\n/* set default body styles */\nbody {\n  min-height: 100%;\n  position: relative;\n  background-color: #fff;\n  -webkit-text-size-adjust: 100%;\n\n  font-family: $defFonts;\n  font-size: 100%;\n  line-height: 26px;\n  font-weight: 400;\n  color: rgba(0, 0, 0, 0.87);\n  margin: 0;\n  word-break: break-word;\n}\n\n/* default class */\n.container {\n  display: block;\n  width: 100%;\n  max-width: $container-width;\n  margin: 0 auto;\n  padding: 0 $container-p;\n  @include media('>xs') {\n    padding: 0 32px;\n  }\n  @include media('>sm') {\n    padding: 0 60px;\n  }\n  @include media('>=lg') {\n    padding: 0;\n  }\n}\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","// wrap\n\n$container-width: 1170px;\n$container-p: 16px;\n\n/* colors */\n\n$white: #fff;\n$black: #000;\n$primary-color: #f4e041;\n$secondary-color: #00bdd3;\n$third-color: #d0cfcf;\n$fourth-color: #7e7e7e;\n$background-color: #f8f8f8;\n$error-color: #cb3d40;\n\n/* fonts */\n\n$defFonts: 'Nunito', sans-serif;\n\n/* breakpoints */\n\n$breakpoints: (\n  xs: 440px,\n  sm: 768px,\n  md: 1024px,\n  lg: 1170px,\n);\n","/* btn */\n.btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  max-width: 100px;\n  min-height: 34px;\n  padding: 4px 18px;\n  border: 0;\n  border-radius: 80px;\n  background-color: $primary-color;\n\n  position: relative;\n  text-align: center;\n\n  font-weight: 400;\n  font-style: normal;\n  font-size: 16px;\n  line-height: 26px;\n  color: rgba(0, 0, 0, 0.87);\n\n  // animate\n  transition: 0.2s ease;\n\n  // defaults\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    background-color: #ffe302;\n  }\n\n  &:disabled,\n  &[disabled] {\n    background-color: #b4b4b4;\n    color: rgba(255, 255, 255, 0.87);\n  }\n}\n\n.btn-long {\n  max-width: 120px;\n}\n\n.btn-center {\n  margin: 0 auto;\n}\n",".offset-top-first {\n  margin-top: 50px;\n  @include media('>xs') {\n    margin-top: 34px;\n  }\n  @include media('>sm') {\n    margin-top: 20px;\n  }\n}\n.offset-bot-first {\n  margin-bottom: 20px;\n}\n",".loader {\n  position: relative;\n  display: block;\n  width: 100%;\n  max-width: 48px;\n  animation: spin 2s linear infinite;\n  margin-right: auto;\n  margin-left: auto;\n}\n\n.loader__img {\n  position: relative;\n  height: 0;\n  overflow: hidden;\n  padding-bottom: calc(48 / 48 * 100%);\n\n  img {\n    display: block;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    object-fit: cover;\n    object-position: 50% 50%;\n    border-radius: 50%;\n  }\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n",".tippy-box[data-animation='fade'][data-state='hidden'] {\n  opacity: 0;\n}\n\n[data-tippy-root] {\n  max-width: calc(100vw - 10px);\n}\n\n.tippy-box {\n  min-height: 32px;\n  background-color: rgba(0, 0, 0, 0.87);\n  border-radius: 4px;\n  color: #ffffff;\n  position: relative;\n  white-space: normal;\n  outline: 0;\n  transition-property: transform, visibility, opacity;\n}\n\n.tippy-content {\n  position: relative;\n  z-index: 1;\n  padding: 3px 16px;\n}\n",".header {\n}\n\n.header__inner {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 60px;\n}\n\n.header__logo {\n  position: relative;\n  max-width: 104px;\n  display: block;\n  width: 100%;\n}\n\n.header__logo-link {\n  display: block;\n  width: 100%;\n  position: relative;\n  height: 0;\n  overflow: hidden;\n  padding-bottom: calc(26 / 104 * 100%);\n\n  img {\n    display: block;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    object-fit: cover;\n    object-position: 50% 50%;\n  }\n}\n\n.header__actions {\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n  margin-left: 14px;\n\n  .btn {\n    margin-right: 10px;\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n}\n",".intro {\n  background-image: url('../../images/intro-bg.jpg');\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n  background-size: cover;\n  text-align: center;\n  min-height: 500px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: 40px;\n  padding-bottom: 70px;\n  @include media('>xs') {\n    padding-top: 72px;\n  }\n  @include media('>sm') {\n    min-height: 650px;\n  }\n}\n\n.intro__title {\n  font-size: 40px;\n  line-height: 40px;\n  font-weight: 400;\n  color: $white;\n  margin-bottom: 21px;\n}\n\n.intro__text {\n  color: $white;\n  margin-bottom: 32px;\n  max-width: 380px;\n  margin-right: auto;\n  margin-left: auto;\n}\n",".employees {\n  padding-top: 140px;\n  background-color: $background-color;\n}\n\n.employees__title {\n  font-size: 40px;\n  line-height: 40px;\n  font-weight: 400;\n  margin-bottom: 50px;\n  text-align: center;\n}\n\n.employees__list {\n  @include media('>=sm') {\n    display: flex;\n    flex-wrap: wrap;\n    margin-right: -8px;\n    margin-left: -8px;\n  }\n\n  @include media('>=md') {\n    margin-right: -15px;\n    margin-left: -15px;\n  }\n}\n\n.employees__item {\n  display: block;\n  width: 100%;\n  margin-bottom: 20px;\n  @include media('>=sm') {\n    width: 50%;\n    padding-right: 8px;\n    padding-left: 8px;\n    margin-bottom: 16px;\n  }\n\n  @include media('>=md') {\n    width: calc(100% / 3);\n    padding-right: 15px;\n    padding-left: 15px;\n    margin-bottom: 29px;\n  }\n\n  h3,\n  p {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n.employees__item-inner {\n  display: block;\n  width: 100%;\n  height: 100%;\n  border-radius: 16px;\n  padding: 20px;\n  background-color: $white;\n  text-align: center;\n}\n\n.employees__item-wrapper {\n  position: relative;\n  max-width: 70px;\n  width: 100%;\n  margin-right: auto;\n  margin-bottom: 20px;\n  margin-left: auto;\n}\n\n.employees__item-img {\n  position: relative;\n  height: 0;\n  overflow: hidden;\n  padding-bottom: calc(70 / 70 * 100%);\n\n  img {\n    border-radius: 50%;\n    display: block;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    object-fit: cover;\n    object-position: 50% 50%;\n  }\n}\n",".form {\n  padding-top: 140px;\n  padding-bottom: 100px;\n  background-color: $background-color;\n}\n\n.form__title {\n  font-size: 40px;\n  line-height: 40px;\n  font-weight: 400;\n  text-align: center;\n  margin-bottom: 50px;\n}\n\n.form__wrapper {\n  display: block;\n  width: 100%;\n  max-width: 380px;\n  margin-right: auto;\n  margin-left: auto;\n}\n\n.form__label {\n  display: block;\n  width: 100%;\n  margin-bottom: 50px;\n  position: relative;\n  z-index: 1;\n\n  &.focus {\n    .form__input-placeholder {\n      top: -7px;\n      z-index: 1;\n      transform: translateY(0);\n      font-size: 12px;\n      line-height: 14px;\n      font-weight: 500;\n      padding: 0 4px;\n      background-color: $background-color;\n    }\n  }\n\n  &.error {\n    .form__input-placeholder {\n      color: $error-color;\n    }\n    .form__input {\n      border: 2px solid $error-color;\n    }\n    .form__file-btn {\n      border: 2px solid $error-color;\n      border-right: 0;\n    }\n    .form__file-text {\n      border: 2px solid $error-color;\n    }\n  }\n}\n\n.form__input {\n  display: block;\n  width: 100%;\n  min-height: 54px;\n  padding: 12px 16px;\n  border: 1px solid #d0cfcf;\n  background-color: transparent;\n  border-radius: 4px;\n  box-shadow: none;\n  font-family: $defFonts;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 26px;\n}\n.form__input-placeholder {\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 16px;\n  z-index: -1;\n  transform: translateY(-50%);\n  color: #7e7e7e;\n  transition: 0.2s ease;\n}\n\n.form__radio-group {\n  display: block;\n  width: 100%;\n  margin-top: -7px;\n  margin-bottom: 47px;\n}\n\n.form__radio-label {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 7px;\n  cursor: pointer;\n\n  input[type='radio'] {\n    &:checked + .form__radio {\n      border: 1px solid $secondary-color;\n      &:after {\n        display: block;\n      }\n    }\n  }\n}\n\n.form__radio-title {\n  display: inline-block;\n  margin-bottom: 11px;\n}\n\n.form__radio {\n  display: block;\n  width: 20px;\n  height: 20px;\n  border: 1px solid $third-color;\n  border-radius: 50%;\n  position: relative;\n  margin-right: 12px;\n  flex-shrink: 0;\n\n  &:after {\n    content: '';\n    display: none;\n    width: 50%;\n    height: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    z-index: 1;\n    transform: translate(-50%, -50%);\n    background-color: $secondary-color;\n    border-radius: 50%;\n  }\n}\n\n.form__error {\n  font-size: 12px;\n  line-height: 14px;\n  color: $error-color;\n  font-family: 'Asap';\n  position: absolute;\n  bottom: -16px;\n  left: 16px;\n  z-index: 1;\n}\n\n.form__file {\n  display: flex;\n  width: 100%;\n  min-height: 54px;\n  cursor: pointer;\n}\n\n.form__file-btn {\n  display: block;\n  width: 83px;\n  flex-shrink: 0;\n  border: 1px solid rgba(0, 0, 0, 0.87);\n  border-radius: 4px 0px 0px 4px;\n  padding: 13px 14px;\n}\n\n.form__file-text {\n  display: block;\n  width: calc(100% - 83px);\n  color: #7e7e7e;\n  padding: 13px 16px;\n  border: 1px solid #d0cfcf;\n  border-radius: 0 4px 4px 0;\n\n  &.active {\n    color: rgba(0, 0, 0, 0.87);\n  }\n}\n\n.form__img-wrapper {\n  position: relative;\n  max-width: 328px;\n  width: 100%;\n  margin-right: auto;\n  margin-left: auto;\n}\n\n.form__img {\n  position: relative;\n  height: 0;\n  overflow: hidden;\n  padding-bottom: calc(290 / 328 * 100%);\n\n  img {\n    display: block;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    object-fit: cover;\n    object-position: 50% 50%;\n  }\n}\n\n.form__wrapper-error {\n  display: block;\n  color: $error-color;\n  margin-bottom: 47px;\n}\n"],"names":[],"sourceRoot":""}